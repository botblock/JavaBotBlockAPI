plugins{
    id 'com.jfrog.bintray' version '1.8.4'
    id 'java-library'
    id 'idea'
    id 'maven-publish'
    id 'maven'
}

group = 'com.andre601'

version = '3.0.1_tb1'

sourceCompatibility = targetCompatibility = 1.8

jar{
    baseName = 'JavaBotBlockAPI'
}

repositories{
    mavenCentral()
    jcenter()
}

dependencies{
    api group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'
    api group: 'org.json', name: 'json', version: '20190722'
    api group: 'org.jetbrains', name: 'annotations', version: '18.0.0'
    api(group: 'net.dv8tion', name: 'JDA', version: '4.0.0_68'){
        exclude(module: 'opus-java')
    }
    api group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '2.8.0'
}

task sourcesJar(type: Jar, dependsOn: classes){
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc){
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts{
    archives sourcesJar
    archives javadocJar
}

bintray{
    user = System.getenv("bintrayUser")
    key = System.getenv("bintrayApiKey")
    publications = ['JavaBotBlockAPIRelease']
    pkg{
        repo = 'maven'
        name = 'JavaBotBlockAPI'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/botblock/JavaBotBlockAPI'
        version{
            name = project.version
            released = new Date()
        }
    }
}

publishing{
    publications{
        JavaBotBlockAPIRelease(MavenPublication){
            from components.java
            groupId group
            artifactId archivesBaseName
            version version
            artifact javadocJar
            artifact sourcesJar
        }
    }
    repositories{
        maven{
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/botblock/JavaBotBlockAPI")
            credentials{
                username = "botblock"
                password = System.getenv("GITHUB_TOKEN")
            }
        }
        publications{
            gpr(MavenPublication){
                from(components.java)
            }
        }
    }
}
